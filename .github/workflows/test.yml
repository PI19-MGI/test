# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Test

on:
  workflow_dispatch:

env:
  VCPKG_ROOT:  '${{ github.workspace }}/../vcpkg'
  VCPKG_COMMIT: "782ccc18d8b819cdef6794a6c03eb3d9f7cd04aa"

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2019
    
    steps:
    
    - name: test
      run: |
        gh --version
        jq --version
      
    # Installation et mise en place de VisualStudio
    #- name: install visual studio
     # run: |
      #  curl "https://download.visualstudio.microsoft.com/download/pr/7e1f1b8d-73fe-448c-a4e0-0ea481025985/a327fa967a032896e6408255db82a987a5bf91b42be26c2eaa71ebdadb0f46b8/vs_Professional.exe" -o "vs_Professional.exe" 
       # Start-Process -FilePath vs_Professional.exe -ArgumentList "--add", "Microsoft.VisualStudio.Workload.NativeDesktop", "--includeRecommended", "--remove", "Microsoft.VisualStudio.Component.Vcpkg", "--quiet", "--wait" -Wait -PassThru
    #- uses: ilammy/msvc-dev-cmd@v1
     # with:
      #  toolset: 14.39

    # Installation de CUDA
    #- uses: Jimver/cuda-toolkit@v0.2.22
     # id: cuda-toolkit
      #with:
       # use-github-cache: false
        #cuda: '12.1.0'
